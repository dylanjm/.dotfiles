#+TITLE: DotEmacs
#+AUTHOR: Dylan McDowell

* Emacs Dot Files

** Bootstrap

*** Defaults

#+BEGIN_SRC emacs-lisp
  (setq-default
   ad-redefinition-action 'accept                   ; Silence warnings for redefinition
   auto-window-vscroll nil                          ; Lighten vertical scroll
   cursor-in-non-selected-windows nil               ; Hide the cursor in inactive windows
   delete-by-moving-to-trash t                      ; Delete files to trash
   display-time-default-load-average nil            ; Don't display load average
   display-time-format "%H:%M"                      ; Format the time string
   fill-column 84                                   ; Set width for automatic line breaks
   help-window-select t                             ; Focus new help windows when opened
   indent-tabs-mode nil                             ; Stop using tabs to indent
   inhibit-startup-screen t                         ; Disable start-up screen
   initial-scratch-message ""                       ; Empty the initial *scratch* buffer
   mouse-yank-at-point t                            ; Yank at point rather than pointer
   ns-use-srgb-colorspace nil                       ; Don't use sRGB colors
   recenter-positions '(5 top bottom)               ; Set re-centering positions
   scroll-conservatively most-positive-fixnum       ; Always scroll by one line
   scroll-margin 10                                 ; Add a margin when scrolling vertically
   select-enable-clipboard t                        ; Merge system's and Emacs' clipboard
   sentence-end-double-space nil                    ; End a sentence after a dot and a space
   show-trailing-whitespace nil                     ; Display trailing whitespaces
   split-height-threshold nil                       ; Disable vertical window splitting
   split-width-threshold nil                        ; Disable horizontal window splitting
   tab-width 4                                      ; Set width for tabs
   uniquify-buffer-name-style 'forward              ; Uniquify buffer names
   window-combination-resize t                      ; Resize windows proportionally
   x-stretch-cursor t)                              ; Stretch cursor to the glyph width
  (delete-selection-mode 1)                         ; Replace region when inserting text
  (display-time-mode 1)                             ; Enable time in the mode-line
  (global-display-line-numbers-mode)                ; Always show line numbers
  (fringe-mode 0)                                   ; Disable fringes
  (fset 'yes-or-no-p 'y-or-n-p)                     ; Replace yes/no prompts with y/n
  (global-subword-mode 1)                           ; Iterate through CamelCase words
  (menu-bar-mode 0)                                 ; Disable the menu bar
  (put 'downcase-region 'disabled nil)              ; Enable downcase-region
  (put 'upcase-region 'disabled nil)                ; Enable upcase-region
  (set-default-coding-systems 'utf-8)               ; Default to utf-8 encoding
  (add-to-list 'default-frame-alist
               '(ns-transparent-titlebar . t))      ; Make the titlebar transparent
  (add-to-list 'default-frame-alist
               '(ns-appearance . dark))             ; Make everything dark
  (scroll-bar-mode 0)                               ; Disable the scroll bar
  (blink-cursor-mode 0)                             ; Disable the cursor blinking
  (scroll-bar-mode 0)                               ; Disable the scroll bar
  (tool-bar-mode 0)                                 ; Disable the tool bar
  (tooltip-mode 0)                                  ; Disable the tooltips
  (global-set-key (kbd "C-x C-b") 'ibuffer)         ; Smart Buffer Default
#+END_SRC

Store all backups and autosave files in `/tmp/`

#+begin_src emacs-lisp
  (setq backup-directory-alist
        `((".*" . , (expand-file-name ".emacs-saves" user-emacs-directory))))
  (setq auto-save-file-name-transforms
        `((".*" , (expand-file-name ".emacs-saves" user-emacs-directory) t)))
#+end_src

Setting up Editor Configuration File

#+begin_src emacs-lisp
  (use-package editorconfig
    :ensure t
    :config
    (editorconfig-mode 1))
#+end_src

Garbage-collect on focus-out, Emacs /should/ feel snappier.

#+BEGIN_SRC emacs-lisp
  (add-hook 'focus-out-hook #'garbage-collect)
#+END_SRC

*** Theme

#+BEGIN_SRC emacs-lisp
  (use-package gruvbox-theme 
    :demand t
    :config 
    (load-theme 'gruvbox-dark-hard t))
#+END_SRC

#+begin_src emacs-lisp
  (use-package rainbow-delimiters
    :ensure t
    :config
    (add-hook 'python-mode-hook 'rainbow-delimiters-mode))
#+end_src

#+begin_src emacs-lisp
  (use-package general)
  (use-package diminish :defer t)
  (use-package color-identifiers-mode :defer t)
#+end_src

#+begin_src emacs-lisp
  (use-package smartparens
    :diminish smartparens-mode  
    :commands smartparens-mode
    :init
    (add-hook 'python-mode-hook 'smartparens-mode)
    (add-hook 'lisp-interaction-mode-hook 'smartparens-mode)
    (add-hook 'emacs-lisp-mode-hook 'smartparens-mode)
    (add-hook 'LaTeX-mode-hook 'smartparens-mode)
    (add-hook 'org-mode-hook 'smartparens-mode)
    :config
    (sp-local-pair 'org-mode "_" "_" )
    (sp-local-pair 'org-mode "*" "*" )
    (sp-local-pair 'latex-mode "$" "$")
    (sp-local-pair 'latex-mode "\\left(" "\\right)" :trigger "\\l(")
    ;; highligh matching brackets
    (show-smartparens-global-mode 0)
    ;; so that paren highlights do not override region marking (aka selecting)
    (setq show-paren-priority -1) 
    (setq show-paren-when-point-inside-paren t)
    (setq sp-show-pair-from-inside t)
    (setq show-paren-style 'mixed)) 
#+end_src

*** Load .custom.el

#+begin_src emacs-lisp
  (setq-default custom-file (expand-file-name ".custom.el" user-emacs-directory))
  (when (file-exists-p custom-file)
    (load custom-file))
#+end_src

*** OS Specific


#+begin_src emacs-lisp
  (use-package exec-path-from-shell
    :if (memq window-system '(mac ns nil))
    :hook (after-init . exec-path-from-shell-initialize))
#+end_src


** Language Specific

*** Lisp

#+begin_src emacs-lisp
  (use-package ielm
    :ensure nil
    :hook (ielm-mode . (lambda () (setq-local scroll-margin 0))))
#+end_src

*** Markdown

#+begin_src emacs-lisp
  (use-package markdown-mode
    :mode
    ("INSTALL\\'"
     "CONTRIBUTORS\\'"
     "LICENSE\\'"
     "README\\'"
     "\\.markdown\\'"
     "\\.md\\'")
    :custom
    (markdown-asymmetric-header t)
    (markdown-split-window-direction 'right)
    :config
    (unbind-key "M-<down>" markdown-mode-map)
    (unbind-key "M-<up>" markdown-mode-map))
#+end_src

*** YAML

#+begin_src emacs-lisp
  (use-package yaml-mode
    :mode
    ("\\.yml\\'" "\\.yaml\\'"))
#+end_src

*** LaTeX

Found this LaTeX setup at: https://github.com/peterewills/my_configs/blob/master/.emacs

#+begin_src emacs-lisp
  (use-package latex-extra
    :defer t
    :config
    (add-hook 'LaTeX-mode-hook #'latex-extra-mode))

  (use-package company-auctex
    :defer t
    :config
    (add-hook 'LaTeX-mode-hook 'company-auctex-init))

  (use-package reftex
    :ensure t
    :defer t
    :config
    (setq reftex-cite-prompt-optional-args t)
    (add-hook LaTeX-mode-hook 'turn-on-reftex))

  (use-package tex
    :defer t
    :ensure auctex
    :config
    (setq TeX-auto-save t)
    (setq TeX-parse-self t)
    (setq-default TeX-master nil)
    (setq preview-auto-cache-preamble t)
    (setq TeX-electric-escape t)
    (setq TeX-PDF-mode t)
    (add-hook 'LaTeX-mode-hook 'smartparens-mode)
    (setq auto-mode-alist (cons '("\\.latex$" . LaTeX-mode) auto-mode-alist))
    (add-hook 'LaTeX-mode-hook (lambda ()
                                 (push
                                  '("latexmk" "latexmk -pdf %s" TeX-run-TeX nil t
                                    :help "Run latexmk on file")
                                  TeX-command-list)))
    (add-hook 'TeX-mode-hook '(lambda () (setq TeX-command-default "latexmk")))
    (add-hook 'LaTeX-mode-hook
              (lambda ()
                (local-set-key (kbd "<S-s-mouse-1>") #'TeX-view)))
    :custom
    (reftex-plug-into-AUCTeX t)

    ;; use Skim as default pdf viewer
    ;; Skim's displayline is used for forward search (from .tex to .pdf)
    ;; option -b highlights the current line; option -g opens Skim in the background  
    (TeX-view-program-selection '((output-pdf "PDF Viewer")))
    (TeX-view-program-list
          '(("PDF Viewer" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g %n %o %b")))
    (preview-gs-command "/usr/local/bin/gs"))

#+end_src


** Features

*** Auto-Complete

This is auto complete stuff:

#+begin_src emacs-lisp
(use-package company
  :bind
  (:map company-active-map
        ("RET" . nil)
        ([return] . nil)
        ("TAB" . company-complete-selection)
        ([tab] . company-complete-selection)
        ("<right>" . company-complete-common))
  :hook
  (after-init . global-company-mode)
  :custom
  (company-dabbrev-downcase nil)
  (company-idle-delay .2)
  (company-minimum-prefix-length 1)
  (company-require-match nil)
  (company-tooltip-align-annotations t))
#+end_src









